//
//  LocalError.swift
//  Goodz
//
//  Created by Priyanka Poojara on 06/11/23.
//

import Foundation

protocol LocalError {
    
    var code : Int { get }
    var message : String { get }
    var localizedDescription : String { get }
}

/// List of all errors to use locally
/// - code and message indicates the type of error which is intended to use for reaction of error
/// - localizedDescription : this will be used to define more description of error
enum LocalErrors : LocalError {
    
    case nullResponse
    case nullData
    case serverError(_ message : String)
    case customError(_ code : Int,_ message : String)

    var code: Int {
        switch self {
        case .nullResponse:
            return 1000
        case .nullData:
            return 1001
        case .customError(let code, _):
            return code
        case .serverError(_):
            return 1002
        }
    }
    
    var message: String {
        switch self {
        case .nullResponse:
            return NetworkAlertMessages.defaultError
        case .nullData:
            return NetworkAlertMessages.defaultError
        case .customError(_, let message):
            return message
        case .serverError(_):
            return NetworkAlertMessages.defaultError
        }
    }
    
    var localizedDescription: String{
        
        switch self {
        case .nullResponse:
            return "returned null response from server"
        case .nullData:
            return "returned null data from server"
        case .customError(_, _):
            return "this is autogenerated error. print message for more info"
        case .serverError(let message):
            return message
        }
        
    }
}
